<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Lingceng's Blog]]></title>
  <link href="http://lingceng.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://lingceng.github.io/"/>
  <updated>2015-03-12T10:25:17+08:00</updated>
  <id>http://lingceng.github.io/</id>
  <author>
    <name><![CDATA[Lingceng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Timezone In Rails]]></title>
    <link href="http://lingceng.github.io/blog/2014/11/22/use-timezone-in-rails/"/>
    <updated>2014-11-22T18:38:00+08:00</updated>
    <id>http://lingceng.github.io/blog/2014/11/22/use-timezone-in-rails</id>
    <content type="html"><![CDATA[<h4>Create Table and config</h4>

<p>Let&rsquo;s create a table first.</p>

<pre><code>class CreateHellos &lt; ActiveRecord::Migration
  def change
    create_table :hellos do |t|
      t.timestamps
    end
  end
end
</code></pre>

<p>Add following to <code>config/application.rb</code> to config timezone.</p>

<pre><code>Rails.application.config.active_record.default_timezone = :local
Rails.application.config.time_zone = 'Beijing'

Rails.application.config.i18n.default_locale = 'zh-CN'
</code></pre>

<h4><code>to_s(:db)</code> vs <code>to_s</code></h4>

<pre><code>&gt; l = FinanceItem.create
#=&gt; #&lt;FinanceItem id: 1, created_at: "2014-11-22 03:00:32", updated_at: "2014-11-22 03:00:32" &gt;
&gt; l.created_at
#=&gt; Sat, 22 Nov 2014 11:00:32 CST +08:00
&gt; l.created_at.to_s(:db)
#=&gt; "2014-11-22 03:00:32"
</code></pre>

<p><code>to_s(:db)</code> will output in time UTC which is always not us want.</p>

<pre><code>TimeWithZone to_s(:db)
:db format outputs time in UTC;
all others output time in local
</code></pre>

<h4><code>default_timezone</code> is so necessary</h4>

<p><code>config.time_zone</code> sets the default time zone for the application
and enables time zone awareness for Active Record.</p>

<p><code>config.active_record.default_timezone</code> determines whether to use Time.local
 (if set to :local) or Time.utc (if set to :utc) when pulling dates and times
from the database.  The default is :utc.</p>

<pre><code>`utc()`
Returns a Time or DateTime instance that represents the time in UTC.

`local()`
Method for creating new ActiveSupport::TimeWithZone instance
in time zone of self from given values.

Time.zone = 'Hawaii'                    # =&gt; "Hawaii"
Time.zone.local(2007, 2, 1, 15, 30, 45) # =&gt; Thu, 01 Feb 2007 15:30:45 HST -10:00
</code></pre>

<h4>DateTime.parse vs Time.zone.parse</h4>

<pre><code>&gt; a = DateTime.parse('2014-11-22 12:35:05')
#=&gt; Sat, 22 Nov 2014 12:35:05 +0000
&gt; a.to_s(:rfc822)
#=&gt; "Sat, 22 Nov 2014 12:35:05 +0000"
&gt; a.in_time_zone.to_s(:rfc822)
#=&gt; "Sat, 22 Nov 2014 20:35:05 +0800"

&gt; b = Time.zone.parse('2014-11-22 12:35:05')
#=&gt; 2014-11-22 12:35:05
&gt; b.to_s(:rfc822)
#=&gt; "Sat, 22 Nov 2014 12:35:05 +0800"
&gt; c = '2014-11-22 12:35:05'.to_time
#=&gt; 2014-11-22 12:35:05
&gt; c.to_s
#=&gt; "2014-11-22 12:35:05 +0800"
</code></pre>

<p>Notice that <code>Time.zone.parse</code> has <code>+0800</code> timezone offset.</p>

<h3>Time.now vs Time.current</h3>

<p>Let&rsquo;s see the definition of <code>Time.current</code></p>

<pre><code># File activesupport/lib/active_support/core_ext/time/calculations.rb, line 29
def current
  ::Time.zone ? ::Time.zone.now : ::Time.now
end
</code></pre>

<p>Time.now uses the system time because it&rsquo;s is part of the Ruby standard library.
Time.zone.now will set time with <code>config.time_zone</code>.</p>

<h3>In a word</h3>

<p>Set the following config:</p>

<pre><code>active_record.default_timezone = :local
# or others
time_zone = 'Beijing'
</code></pre>

<p>Use <code>Time.zone.parse</code> do <strong>not</strong> use <code>DateTime.parse</code>.
Use <code>Time.zone.now</code> or <code>Time.current</code> do <strong>not</strong> use <code>Time.now</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Turbolink Best Practice]]></title>
    <link href="http://lingceng.github.io/blog/2014/10/16/turbolink-best-practice/"/>
    <updated>2014-10-16T12:12:00+08:00</updated>
    <id>http://lingceng.github.io/blog/2014/10/16/turbolink-best-practice</id>
    <content type="html"><![CDATA[<h2>What does Turbolink do?</h2>

<p><a href="https://github.com/rails/turbolinks">Turbolink</a> makes browser to only replace
page&rsquo;s <code>&lt;body&gt;</code> and <code>&lt;title&gt;</code> to simulate page jumping when click a link.</p>

<p>It&rsquo;s fast because no need to recompile the JavaScript and CSS.
As you can see, we must keep stuffs in head the same, or things will go wrong.</p>

<h4>Turbolink has other features make it fast</h4>

<p>Use client cache pages.</p>

<pre><code># View current page cache size
Turbolinks.pagesCached();
# Set the cache size
Turbolinks.pagesCached(20);
</code></pre>

<p>Use transition cache.
Transition will immediately display the cached copy of page and then replace
with remote returned one.</p>

<pre><code># enable transition cache
Turbolinks.enableTransitionCache();
</code></pre>

<p>Browser native process bar will not work when using Turbolink.
So Turbolink provide a JavaScript-and-CSS-based one.</p>

<pre><code>Turbolinks.enableProgressBar();
</code></pre>

<h2>What&rsquo;s the best practice?</h2>

<ul>
<li><strong> Never change <code>&lt;HEAD&gt;</code> content except <code>title</code> </strong></li>
<li><strong> Put all JavaScript and CSS in <code>&lt;HEAD&gt;</code> </strong></li>
<li><strong> Use <code>jquery.turbolink</code> to fix <code>DOMContentLoaded</code> or <code>jQuery.ready()</code> in jQuery. </strong></li>
</ul>


<h2>You want some JavaScript only included in some page?</h2>

<p>Mark to <code>&lt;body&gt;</code> when need specific page logic, trigger it according to mark, eg.</p>

<pre><code>// In app/views/layouts/application.html.erb
&lt;body data-controller-name="&lt;%= controller_name %&gt;"&gt;

// In topics.coffee
window.Topics =
  replies_per_page: 50
  init : () -&gt;
    console.log "hello"

$(document).ready -&gt;
  if $('body').data('controller-name') in ['topics']
    Topics.init()

// Add topics to appliction.js
//= require topics
</code></pre>

<p>Note: This will also avoid <code>config.precompile.assets+=%w{user}</code> in Rails.</p>

<h2>What will happen when add JavaScript in page body?</h2>

<p>You should not add JavaScript to <code>&lt;body&gt;</code>, they will be re-evaluated.
Especially when doing event bind, it will cause event binding multiple times.</p>

<p>Note that you can add <code>data-turbolinks-eval=false</code> to prevent re-evaluating.</p>

<pre><code>&lt;script type="text/javascript" data-turbolinks-eval=false&gt;
  console.log("I'm only run once on the initial page load");
&lt;/script&gt;
</code></pre>

<h2>What will happen when I changed head content?</h2>

<p>It depends on how you change it.</p>

<p>If you add some <code>&lt;script type="text/javascript"&gt;</code> tag, eg.</p>

<pre><code>// On page B
&lt;script type="text/javascript"&gt;
  console.log('hello')
&lt;/script&gt;
</code></pre>

<p>When you click a link on page A to page B, the &lsquo;hello&rsquo; will <strong>not</strong> printed.
The script tag will be ignored.</p>

<p>It&rsquo;s the same when you make it a <code>src</code> link.</p>

<pre><code>// On page B
&lt;script type="text/javascript" src='hello.js'&gt; &lt;/script&gt;
</code></pre>

<p>Only if you add a <code>data-turbolinks-track</code> tag.</p>

<pre><code>&lt;script type="text/javascript" src="http://lingceng.github.io/hello.js" data-turbolinks-track&gt;&lt;/script&gt;
</code></pre>

<p>When this case, &lsquo;hello&rsquo; will be printed,
every things seems fine except <strong>slow page load</strong>.</p>

<p>You&rsquo;ll technically be requesting the same page twice.
Once through Turbolinks to detect that the assets changed,
and then again do a full redirect to that page.</p>

<p>You should always add <code>data-turbolinks-track</code> to JavaScript and CSS links.
This will trigger full page load when your assets changed.
It is only useful to clear cache in a page instance.</p>

<p>When page A and page B have different <code>track targets</code>,
every switch between them will cause <code>double load</code>.
So, you&rsquo;d better not rely on <code>data-turbolinks-track</code> to jumps between different head content.</p>

<p>See the <a href="https://github.com/rails/turbolinks/blob/master/lib%2Fassets%2Fjavascripts%2Fturbolinks.js.coffee#L231">code</a>
to know the details</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">extractTrackAssets = </span><span class="p">(</span><span class="nx">doc</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">node</span> <span class="k">in</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">head</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;).</span><span class="nx">childNodes</span> <span class="k">when</span> <span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">?</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">data</span><span class="o">-</span><span class="nx">turbolinks</span><span class="o">-</span><span class="nx">track</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span><span class="o">?&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s">&#39;src&#39;</span><span class="p">)</span> <span class="o">or</span> <span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s">&#39;href&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nv">assetsChanged = </span><span class="p">(</span><span class="nx">doc</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nx">loadedAssets</span> <span class="o">||=</span> <span class="nx">extractTrackAssets</span> <span class="nb">document</span>
</span><span class='line'>  <span class="nv">fetchedAssets  = </span><span class="nx">extractTrackAssets</span> <span class="nx">doc</span>
</span><span class='line'>  <span class="nx">fetchedAssets</span><span class="p">.</span><span class="nx">length</span> <span class="o">isnt</span> <span class="nx">loadedAssets</span><span class="p">.</span><span class="nx">length</span> <span class="o">or</span> <span class="nx">intersection</span><span class="p">(</span><span class="nx">fetchedAssets</span><span class="p">,</span> <span class="nx">loadedAssets</span><span class="p">).</span><span class="nx">length</span> <span class="o">isnt</span> <span class="nx">loadedAssets</span><span class="p">.</span><span class="nx">length</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>One last rescue is to prevent turbolink jump by add <code>data-no-turbolink</code> tag.
And then you will not benefit from turbolink speed boost.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://lingceng.github.io/&quot;</span><span class="nt">&gt;</span>Home (via Turbolinks)<span class="nt">&lt;/a&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;some-div&quot;</span> <span class="na">data-no-turbolink</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://lingceng.github.io/&quot;</span><span class="nt">&gt;</span>Home (without Turbolinks)<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
